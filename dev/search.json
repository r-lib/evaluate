[{"path":[]},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"evaluate.r-lib.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"evaluate.r-lib.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to evaluate","title":"Contributing to evaluate","text":"outlines propose change evaluate. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"evaluate.r-lib.org/dev/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to evaluate","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"evaluate.r-lib.org/dev/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to evaluate","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"evaluate.r-lib.org/dev/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to evaluate","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"r-lib/evaluate\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"evaluate.r-lib.org/dev/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to evaluate","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"evaluate.r-lib.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to evaluate","text":"Please note evaluate project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"evaluate.r-lib.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 evaluate authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"evaluate.r-lib.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hadley Wickham. Author, maintainer. Yihui Xie. Author. Michael Lawrence. Contributor. Thomas Kluyver. Contributor. Jeroen Ooms. Contributor. Barret Schloerke. Contributor. Adam Ryczkowski. Contributor. Hiroaki Yutani. Contributor. Michel Lang. Contributor. Karolis Koncevičius. Contributor. . Copyright holder, funder.","code":""},{"path":"evaluate.r-lib.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wickham H, Xie Y (2025). evaluate: Parsing Evaluation Tools Provide Details Default. R package version 1.0.3.9000, https://github.com/r-lib/evaluate, https://evaluate.r-lib.org/.","code":"@Manual{,   title = {evaluate: Parsing and Evaluation Tools that Provide More Details than the Default},   author = {Hadley Wickham and Yihui Xie},   year = {2025},   note = {R package version 1.0.3.9000, https://github.com/r-lib/evaluate},   url = {https://evaluate.r-lib.org/}, }"},{"path":"evaluate.r-lib.org/dev/index.html","id":"evaluate","dir":"","previous_headings":"","what":"Parsing and Evaluation Tools that Provide More Details than the Default","title":"Parsing and Evaluation Tools that Provide More Details than the Default","text":"evaluate provides tools allow recreate parsing, evaluation display R code, enough information can accurately recreate happens command line. Evaluate + replay works similarly source(), written way make easy adapt output formats, html latex. three components evaluate package: parse_all(), version parse keeps expressions original source code, maintaining formatting comments. evaluate(), evaluates expression produced parse_all(), tracking output, messages, warnings, errors occur, interleaving correct order original source value expression. replay(), outputs pieces way makes look like ’ve entered code command line. function also serves template output formats.","code":"library(evaluate)"},{"path":"evaluate.r-lib.org/dev/reference/create_traceback.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a traceback from a list of calls — create_traceback","title":"Generate a traceback from a list of calls — create_traceback","text":"Generate traceback list calls","code":""},{"path":"evaluate.r-lib.org/dev/reference/create_traceback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a traceback from a list of calls — create_traceback","text":"","code":"create_traceback(callstack)"},{"path":"evaluate.r-lib.org/dev/reference/create_traceback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a traceback from a list of calls — create_traceback","text":"callstack stack calls, generated (e.g.) base::sys.calls()","code":""},{"path":"evaluate.r-lib.org/dev/reference/evaluate-package.html","id":null,"dir":"Reference","previous_headings":"","what":"evaluate: Parsing and Evaluation Tools that Provide More Details than the Default — evaluate-package","title":"evaluate: Parsing and Evaluation Tools that Provide More Details than the Default — evaluate-package","text":"Parsing evaluation tools make easy recreate command line behaviour R.","code":""},{"path":[]},{"path":"evaluate.r-lib.org/dev/reference/evaluate-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"evaluate: Parsing and Evaluation Tools that Provide More Details than the Default — evaluate-package","text":"Maintainer: Hadley Wickham hadley@posit.co Authors: Yihui Xie (ORCID) contributors: Michael Lawrence [contributor] Thomas Kluyver [contributor] Jeroen Ooms [contributor] Barret Schloerke [contributor] Adam Ryczkowski [contributor] Hiroaki Yutani [contributor] Michel Lang [contributor] Karolis Koncevičius [contributor] Posit Software, PBC [copyright holder, funder]","code":""},{"path":"evaluate.r-lib.org/dev/reference/evaluate.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate input and return all details of evaluation — evaluate","title":"Evaluate input and return all details of evaluation — evaluate","text":"Compare eval(), evaluate captures information necessary recreate output copied pasted code R terminal. captures messages, warnings, errors output, correctly interleaved order occured. stores final result, whether visible, contents current graphics device.","code":""},{"path":"evaluate.r-lib.org/dev/reference/evaluate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate input and return all details of evaluation — evaluate","text":"","code":"evaluate(   input,   envir = parent.frame(),   enclos = NULL,   debug = FALSE,   stop_on_error = 0L,   keep_warning = TRUE,   keep_message = TRUE,   log_echo = FALSE,   log_warning = FALSE,   new_device = TRUE,   output_handler = NULL,   filename = NULL,   include_timing = FALSE )"},{"path":"evaluate.r-lib.org/dev/reference/evaluate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate input and return all details of evaluation — evaluate","text":"input input object parsed evaluated.  May string, file connection function.  Passed parse_all(). envir environment evaluate expressions. enclos envir list data frame, treated parent environment envir. debug TRUE, displays information useful debugging, including output evaluate captures. stop_on_error number 0 2 controls happens code errors: 0, default, continue running code, just pasted code command line. 1, evaluation stop first error without signaling error, get back results point. 2, evaluation halt first error get back results. keep_warning, keep_message single logical value controls happens warnings messages. TRUE, default, warnings messages captured output. NA, warnings messages captured bubble calling environment evaluate(). FALSE, warnings messages completed supressed shown anywhere. Note setting envvar R_EVALUATE_BYPASS_MESSAGES true force arguments set NA. log_echo, log_warning TRUE, immediately log code warnings (respectively) stderr. force TRUE env var ACTIONS_STEP_DEBUG true, debugging failing GitHub Actions workflow. new_device TRUE, open new graphics device automatically close completion. prevents evaluation interfering existing graphics environment. output_handler instance output_handler() processes output evaluation. default simply prints visible return values. filename string overrriding base::srcfile() filename. include_timing Deprecated.","code":""},{"path":"evaluate.r-lib.org/dev/reference/evaluate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate input and return all details of evaluation — evaluate","text":"","code":"evaluate(c(   \"1 + 1\",   \"2 + 2\" )) #> <evaluation> #> Source code:  #>   1 + 1 #> Text output:  #>   [1] 2 #> Source code:  #>   2 + 2 #> Text output:  #>   [1] 4  # Not that's there's a difference in output between putting multiple # expressions on one line vs spreading them across multiple lines evaluate(\"1;2;3\") #> <evaluation> #> Source code:  #>   1;2;3 #> Text output:  #>   [1] 1 #> Text output:  #>   [1] 2 #> Text output:  #>   [1] 3 evaluate(c(\"1\", \"2\", \"3\")) #> <evaluation> #> Source code:  #>   1 #> Text output:  #>   [1] 1 #> Source code:  #>   2 #> Text output:  #>   [1] 2 #> Source code:  #>   3 #> Text output:  #>   [1] 3  # This also affects how errors propagate, matching the behaviour # of the R console evaluate(\"1;stop(2);3\") #> <evaluation> #> Source code:  #>   1;stop(2);3 #> Text output:  #>   [1] 1 #> Condition:  #>   Error: #>   2 evaluate(c(\"1\", \"stop(2)\", \"3\")) #> <evaluation> #> Source code:  #>   1 #> Text output:  #>   [1] 1 #> Source code:  #>   stop(2) #> Condition:  #>   Error: #>   2 #> Source code:  #>   3 #> Text output:  #>   [1] 3"},{"path":"evaluate.r-lib.org/dev/reference/flush_console.html","id":null,"dir":"Reference","previous_headings":"","what":"An emulation of flush.console() in evaluate() — flush_console","title":"An emulation of flush.console() in evaluate() — flush_console","text":"evaluate() evaluating code, text output diverted internal connection, way flush connection. function provides way \"flush\" connection text output can immediately written , importantly, text handler (specified output_handler argument evaluate()) called, makes possible users know code produces text output using handler. function supposed called inside evaluate() (e.g. either direct evaluate() call knitr code chunks).","code":""},{"path":"evaluate.r-lib.org/dev/reference/flush_console.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An emulation of flush.console() in evaluate() — flush_console","text":"","code":"flush_console()"},{"path":"evaluate.r-lib.org/dev/reference/inject_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"Inject functions into the environment of evaluate() — inject_funs","title":"Inject functions into the environment of evaluate() — inject_funs","text":"Create functions environment specified envir argument evaluate(). can helpful want substitute certain functions evaluating code. make sure wipe existing functions environment, functions exist environment injected.","code":""},{"path":"evaluate.r-lib.org/dev/reference/inject_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inject functions into the environment of evaluate() — inject_funs","text":"","code":"inject_funs(...)"},{"path":"evaluate.r-lib.org/dev/reference/inject_funs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inject functions into the environment of evaluate() — inject_funs","text":"... Named arguments functions. empty, previously injected functions emptied.","code":""},{"path":"evaluate.r-lib.org/dev/reference/inject_funs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inject functions into the environment of evaluate() — inject_funs","text":"Invisibly returns previous values.","code":""},{"path":"evaluate.r-lib.org/dev/reference/inject_funs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Inject functions into the environment of evaluate() — inject_funs","text":"expert use . use unless clearly understand .","code":""},{"path":"evaluate.r-lib.org/dev/reference/inject_funs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inject functions into the environment of evaluate() — inject_funs","text":"","code":"library(evaluate) # normally you cannot capture the output of system evaluate(\"system('R --version')\") #> <evaluation> #> Source code:  #>   system('R --version')  # replace the system() function old <- inject_funs(system = function(...) {   cat(base::system(..., intern = TRUE), sep = \"\\n\") })  evaluate(\"system('R --version')\") #> <evaluation> #> Source code:  #>   system('R --version') #> Text output:  #>   R version 4.4.2 (2024-10-31) -- \"Pile of Leaves\" #>   Copyright (C) 2024 The R Foundation for Statistical Computing #>   Platform: x86_64-pc-linux-gnu #>    #>   R is free software and comes with ABSOLUTELY NO WARRANTY. #>   You are welcome to redistribute it under the terms of the #>   GNU General Public License versions 2 or 3. #>   For more information about these matters see #>   https://www.gnu.org/licenses/. #>     # restore previously injected functions inject_funs(old)"},{"path":"evaluate.r-lib.org/dev/reference/is.message.html","id":null,"dir":"Reference","previous_headings":"","what":"Object class tests — is.message","title":"Object class tests — is.message","text":"Object class tests","code":""},{"path":"evaluate.r-lib.org/dev/reference/is.message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object class tests — is.message","text":"","code":"is.message(x)  is.warning(x)  is.error(x)  is.source(x)  is.recordedplot(x)"},{"path":"evaluate.r-lib.org/dev/reference/line_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Line prompt. — line_prompt","title":"Line prompt. — line_prompt","text":"Format single expression entered command prompt.","code":""},{"path":"evaluate.r-lib.org/dev/reference/line_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line prompt. — line_prompt","text":"","code":"line_prompt(x, prompt = getOption(\"prompt\"), continue = getOption(\"continue\"))"},{"path":"evaluate.r-lib.org/dev/reference/line_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line prompt. — line_prompt","text":"x string representing single expression prompt prompt first line continue prompt subsequent lines","code":""},{"path":"evaluate.r-lib.org/dev/reference/line_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line prompt. — line_prompt","text":"string","code":""},{"path":"evaluate.r-lib.org/dev/reference/local_reproducible_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Control common output options — local_reproducible_output","title":"Control common output options — local_reproducible_output","text":"Often using evaluate() running R code specific output context mind. many options env vars packages take current environment, meaning output depends current state undesirable ways. function allows describe characteristics desired output takes care setting options environment variables .","code":""},{"path":"evaluate.r-lib.org/dev/reference/local_reproducible_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Control common output options — local_reproducible_output","text":"","code":"local_reproducible_output(   width = 80,   color = FALSE,   unicode = FALSE,   hyperlinks = FALSE,   rstudio = FALSE,   frame = parent.frame() )"},{"path":"evaluate.r-lib.org/dev/reference/local_reproducible_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Control common output options — local_reproducible_output","text":"width Value \"width\" option. color Determines whether cli/crayon colour used. unicode use unicode characaters possible? hyperlinks use ANSI hyperlinks? rstudio pretend running inside RStudio? frame Scope changes; calling frame terminates changes undone. expert use .","code":""},{"path":"evaluate.r-lib.org/dev/reference/new_output_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom output handlers — new_output_handler","title":"Custom output handlers — new_output_handler","text":"output_handler handles results evaluate(), including values, graphics, conditions. type output handled particular function handler object.","code":""},{"path":"evaluate.r-lib.org/dev/reference/new_output_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom output handlers — new_output_handler","text":"","code":"new_output_handler(   source = identity,   text = identity,   graphics = identity,   message = identity,   warning = identity,   error = identity,   value = render,   calling_handlers = list() )"},{"path":"evaluate.r-lib.org/dev/reference/new_output_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom output handlers — new_output_handler","text":"source Function handle echoed source code evaluation. function take two arguments (src expr), return object inserted evaluate outputs. src unparsed text source code, expr complete input expression (may 0, 1, 2, components; see parse_all() details). Return src default evaluate behaviour. Return NULL drop source output. text Function handle textual console output. graphics Function handle graphics, returned recordPlot(). message Function handle message() output. warning Function handle warning() output. error Function handle stop() output. value Function handle values returned evaluation. one argument, called visible values. two arguments, handles values, second argument indicating whether value visible. three arguments, called values, third argument given evaluation environment needed look print methods S3 objects. calling_handlers List calling handlers. handlers precedence exiting handler installed evaluate() stop_on_error set 0.","code":""},{"path":"evaluate.r-lib.org/dev/reference/new_output_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom output handlers — new_output_handler","text":"new output_handler object","code":""},{"path":"evaluate.r-lib.org/dev/reference/new_output_handler.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Custom output handlers — new_output_handler","text":"handler functions accept output object first argument. return value handlers ignored, except case value handler, visible return value saved output list. Calling constructor arguments results default handler, mimics behavior console printing visible values. Note recursion common: example, value printing, text graphics handlers may called.","code":""},{"path":"evaluate.r-lib.org/dev/reference/parse_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse, retaining comments — parse_all","title":"Parse, retaining comments — parse_all","text":"Works similarly parse, also keeps original formatting comments.","code":""},{"path":"evaluate.r-lib.org/dev/reference/parse_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse, retaining comments — parse_all","text":"","code":"parse_all(x, filename = NULL, allow_error = FALSE)"},{"path":"evaluate.r-lib.org/dev/reference/parse_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse, retaining comments — parse_all","text":"x object parse.  Can string, file connection, function. connection, opened closed closed initially. filename string overriding file name allow_error whether allow syntax errors x","code":""},{"path":"evaluate.r-lib.org/dev/reference/parse_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse, retaining comments — parse_all","text":"data frame two columns, src expr, one row complete input x. complete input R code trigger execution typed console. might consist multiple expressions separated ; one expression spread multiple lines (like function definition). src character vector source code. element represents complete input expression (might span multiple line) always terminal \\n. expr list-column expressions. expressions can length, depending structure complete input source: src consists whitespace /comments, expr length 0. src single scalar (like TRUE, 1, \"x\"), name, function call, expr length 1. src contains multiple expressions separated ;, expr length two . expressions srcrefs removed. syntax errors x allow_error = TRUE, data frame attribute PARSE_ERROR stores error object.","code":""},{"path":"evaluate.r-lib.org/dev/reference/parse_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse, retaining comments — parse_all","text":"","code":"# Each of these inputs are single line, but generate different numbers of # expressions source <- c(   \"# a comment\",   \"x\",   \"x;y\",   \"x;y;z\" ) parsed <- parse_all(source) lengths(parsed$expr) #> [1] 0 1 2 3 str(parsed$expr) #> List of 4 #>  $ :  expression() #>  $ :  expression(x) #>  $ :  expression(x, y) #>  $ :  expression(x, y, z)  # Each of these inputs are a single expression, but span different numbers # of lines source <- c(   \"function() {}\",   \"function() {\",   \"  # Hello!\",   \"}\",   \"function() {\",   \"  # Hello!\",   \"  # Goodbye!\",   \"}\" ) parsed <- parse_all(source) lengths(parsed$expr) #> [1] 1 1 1 parsed$src #> [1] \"function() {}\\n\"                             #> [2] \"function() {\\n  # Hello!\\n}\\n\"               #> [3] \"function() {\\n  # Hello!\\n  # Goodbye!\\n}\\n\""},{"path":"evaluate.r-lib.org/dev/reference/replay.html","id":null,"dir":"Reference","previous_headings":"","what":"Replay a list of evaluated results — replay","title":"Replay a list of evaluated results — replay","text":"Replay list evaluated results, run R terminal.","code":""},{"path":"evaluate.r-lib.org/dev/reference/replay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replay a list of evaluated results — replay","text":"","code":"replay(x)"},{"path":"evaluate.r-lib.org/dev/reference/replay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replay a list of evaluated results — replay","text":"x result evaluate()","code":""},{"path":"evaluate.r-lib.org/dev/reference/replay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replay a list of evaluated results — replay","text":"","code":"f1 <- function() {   cat(\"1\\n\")   print(\"2\")   warning(\"3\")   print(\"4\")   message(\"5\")   stop(\"6\") } replay(evaluate(\"f1()\")) #> > f1() #> 1 #> [1] \"2\" #> Warning in f1(): #> 3 #> [1] \"4\" #> 5 #> Error in f1(): #> 6  f2 <- function() {   message(\"Hello\")   plot(1:10)   message(\"Goodbye\") } replay(evaluate(\"f2()\"))  #> > f2() #> Hello #> Goodbye"},{"path":"evaluate.r-lib.org/dev/reference/set_hooks.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and remove hooks — set_hooks","title":"Set and remove hooks — set_hooks","text":"interface wraps base setHook() function provide return value makes easy undo.","code":""},{"path":"evaluate.r-lib.org/dev/reference/set_hooks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and remove hooks — set_hooks","text":"","code":"set_hooks(hooks, action = \"append\")  remove_hooks(hooks)"},{"path":"evaluate.r-lib.org/dev/reference/set_hooks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and remove hooks — set_hooks","text":"hooks named list hooks - hook can either function list functions. action \"replace\", \"append\" \"prepend\"","code":""},{"path":"evaluate.r-lib.org/dev/reference/set_hooks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and remove hooks — set_hooks","text":"","code":"new1 <- list(before.plot.new = function() print(\"Plotted!\")) new2 <- list(before.plot.new = function() print(\"Plotted Again!\")) set_hooks(new1) set_hooks(new2) plot(1)  #> [1] \"Plotted!\" #> [1] \"Plotted Again!\" remove_hooks(new1) plot(1) #> [1] \"Plotted Again!\" remove_hooks(new2) plot(1)"},{"path":"evaluate.r-lib.org/dev/reference/trim_intermediate_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim away intermediate plots — trim_intermediate_plots","title":"Trim away intermediate plots — trim_intermediate_plots","text":"Trim plots modified subsequent lines show \"final\" plot.","code":""},{"path":"evaluate.r-lib.org/dev/reference/trim_intermediate_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim away intermediate plots — trim_intermediate_plots","text":"","code":"trim_intermediate_plots(x)"},{"path":"evaluate.r-lib.org/dev/reference/trim_intermediate_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim away intermediate plots — trim_intermediate_plots","text":"x evaluation object produced evaluate().","code":""},{"path":"evaluate.r-lib.org/dev/reference/trim_intermediate_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim away intermediate plots — trim_intermediate_plots","text":"modified evaluation object.","code":""},{"path":"evaluate.r-lib.org/dev/reference/trim_intermediate_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim away intermediate plots — trim_intermediate_plots","text":"","code":"ev <- evaluate(c(   \"plot(1:3)\",   \"text(1, 1, 'x')\",   \"text(1, 1, 'y')\" ))  # All intermediate plots are captured ev #> <evaluation> #> Source code:  #>   plot(1:3) #> Plot [8]: #>   <base> C_plot_new() #>   <base> palette2() #>   <base> C_plot_window() #>   <base> C_plotXY() #>   <base> C_axis() #>   <base> C_axis() #>   <base> C_box() #>   <base> C_title() #> Source code:  #>   text(1, 1, 'x') #> Plot [9]: #>   <base> C_plot_new() #>   <base> palette2() #>   <base> C_plot_window() #>   <base> C_plotXY() #>   <base> C_axis() #>   <base> C_axis() #>   <base> C_box() #>   <base> C_title() #>   <base> C_text() #> Source code:  #>   text(1, 1, 'y') #> Plot [10]: #>   <base> C_plot_new() #>   <base> palette2() #>   <base> C_plot_window() #>   <base> C_plotXY() #>   <base> C_axis() #>   <base> C_axis() #>   <base> C_box() #>   <base> C_title() #>   <base> C_text() #>   <base> C_text() # Only the final plot is shown trim_intermediate_plots(ev) #> <evaluation> #> Source code:  #>   plot(1:3) #> Source code:  #>   text(1, 1, 'x') #> Source code:  #>   text(1, 1, 'y') #> Plot [10]: #>   <base> C_plot_new() #>   <base> palette2() #>   <base> C_plot_window() #>   <base> C_plotXY() #>   <base> C_axis() #>   <base> C_axis() #>   <base> C_box() #>   <base> C_title() #>   <base> C_text() #>   <base> C_text()"},{"path":"evaluate.r-lib.org/dev/reference/try_capture_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Try, capturing stack on error — try_capture_stack","title":"Try, capturing stack on error — try_capture_stack","text":"variant tryCatch() also captures call stack error occurs.","code":""},{"path":"evaluate.r-lib.org/dev/reference/try_capture_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Try, capturing stack on error — try_capture_stack","text":"","code":"try_capture_stack(quoted_code, env)"},{"path":"evaluate.r-lib.org/dev/reference/try_capture_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Try, capturing stack on error — try_capture_stack","text":"quoted_code code evaluate, quoted form env environment execute code","code":""},{"path":[]},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"evaluate-103","dir":"Changelog","previous_headings":"","what":"evaluate 1.0.3","title":"evaluate 1.0.3","text":"CRAN release: 2025-01-10","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"evaluate-102","dir":"Changelog","previous_headings":"","what":"evaluate 1.0.2","title":"evaluate 1.0.2","text":"Restore correct traceback behaviour (#232).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"evaluate-101","dir":"Changelog","previous_headings":"","what":"evaluate 1.0.1","title":"evaluate 1.0.1","text":"CRAN release: 2024-10-10 Fix buglet revealed using rlang::abort() inside evaluate().","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"evaluate-100","dir":"Changelog","previous_headings":"","what":"evaluate 1.0.0","title":"evaluate 1.0.0","text":"CRAN release: 2024-09-17 Setting ACTIONS_STEP_DEBUG=1 (failing GHA workflow) automatically set log_echo log_warning TRUE (#175). evaluate works R 3.6.0 . evaluate() improvements: Now terminates first error multi-expression input, .e. 1;stop('2');3 longer evaluate third component. matches console behaviour closely. Calls conditions emitted top-level code automatically stripped (#150). Result class (evaluate_evaluation/list) basic print method. Plots created messages/warnings/errors correctly captured (#28). Handler improvements: default value handler now evaluates print() child evaluation environment. largely makes evaluate easier test, make defining S3 methods print little easier (#192). source output handler now passed entire complete input expression, just first component. evalute(include_timing) deprecated. can’t find use GitHub, adds substantial code complexity little gain. .value() removed since tests object evaluate never creates. New local_reproducible_output() helper sets various options env vars help ensure consistency output across environments. parse_all() adds \\n end every line, even last one didn’t one input. Additionally, longer default method, generate better errors pass something unexpected. New trim_intermediate_plots() drops intermediate plots reveal complete/final plot (#206). watchout() longer exported; ’s really implementation detail never leaked public interface.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"evaluate-0240","dir":"Changelog","previous_headings":"","what":"evaluate 0.24.0","title":"evaluate 0.24.0","text":"CRAN release: 2024-06-10 source output handler can now take two arguments (unparsed src parsed call) choose affect displayed source. package now depends R 4.0.0 order decrease maintenance burden.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-023","dir":"Changelog","previous_headings":"","what":"Version 0.23","title":"Version 0.23","text":"CRAN release: 2023-11-01 Prevent existing plots leaking evaluate() results (thanks, @dmurdoch, yihui/knitr#2297). environment variable R_EVALUATE_BYPASS_MESSAGES set true, arguments keep_message keep_warning evaluate() set NA, regardless user input, means messages warnings captured evaluate(). provides possibility force logging messages warnings (thanks, @slodge, yihui/yihui.org#1458).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-022","dir":"Changelog","previous_headings":"","what":"Version 0.22","title":"Version 0.22","text":"CRAN release: 2023-09-29 Fixed problem internal function plot_calls() made examples recordGraphics fail run help page (thanks, Kurt Hornik).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-021","dir":"Changelog","previous_headings":"","what":"Version 0.21","title":"Version 0.21","text":"CRAN release: 2023-05-05 evaluate() gains log_echo log_warning arguments. set TRUE cause code warnings (respectively) immediately emitted stderr(). useful logging unattended environments (#118). Improved error message users accidentally called closeAllConnections() (thanks, @guslipkin, quarto-dev/quarto-cli#5214).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-020","dir":"Changelog","previous_headings":"","what":"Version 0.20","title":"Version 0.20","text":"CRAN release: 2023-01-17 arguments keep_message keep_warning evaluate() can take value NA now, means evaluate() capture messages sent console. equivalent FALSE value v0.19 (thanks, @gadenbuie, https://github.com/yihui/yihui.org/discussions/1458).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-019","dir":"Changelog","previous_headings":"","what":"Version 0.19","title":"Version 0.19","text":"CRAN release: 2022-12-13 evaluate(), keep_message keep_warning completely drop messages warnings, respectively, values FALSE. Previously messages still emitted (console) even take FALSE values. Fixed bug parse_all() fails line directives (thanks, @ArcadeAntics, #114).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-018","dir":"Changelog","previous_headings":"","what":"Version 0.18","title":"Version 0.18","text":"CRAN release: 2022-11-07 Fixed tests still using deprecated ggplot2::qplot().","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-017","dir":"Changelog","previous_headings":"","what":"Version 0.17","title":"Version 0.17","text":"CRAN release: 2022-10-07 Adapted unit test next version ggplot2 (thanks, @thomasp85, #113).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-016","dir":"Changelog","previous_headings":"","what":"Version 0.16","title":"Version 0.16","text":"CRAN release: 2022-08-09 Fixed bug empty ggplot2 plot recorded incorrectly saved (thanks, @sjspielman, rstudio/rmarkdown#2363).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-015","dir":"Changelog","previous_headings":"","what":"Version 0.15","title":"Version 0.15","text":"CRAN release: 2022-02-18 new_output_handler() gains calling_handlers argument. passed withCallingHandlers() evaluate() captures conditions. Fixed #106: assume .atomic(NULL) returns TRUE (thanks, @mmaechler).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-014","dir":"Changelog","previous_headings":"","what":"Version 0.14","title":"Version 0.14","text":"CRAN release: 2019-05-28 hooks persp, .plot.new, .grid.newpage set users respected throughout R session (thanks, @KKPMW, #96).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-013","dir":"Changelog","previous_headings":"","what":"Version 0.13","title":"Version 0.13","text":"CRAN release: 2019-02-12 Errors generated try() now part output (R >= 3.4). achieve , try.outFile option set duration evaluations (thanks, @krlmlr, #91)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-012","dir":"Changelog","previous_headings":"","what":"Version 0.12","title":"Version 0.12","text":"CRAN release: 2018-10-09 Removed stringr dependency (thanks, @mllg, #90).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-011","dir":"Changelog","previous_headings":"","what":"Version 0.11","title":"Version 0.11","text":"CRAN release: 2018-07-17 Fix regression introduced 0.10.1 parse_all.call() (fixes #77) evaluate() now respects options(warn >= 2); warnings turned errors (#81)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-0101","dir":"Changelog","previous_headings":"","what":"Version 0.10.1","title":"Version 0.10.1","text":"CRAN release: 2017-06-24 Added parse_all.call() method use original source evaluating call objects (base::deparse() breaks non-ascii source code) (fixes #74)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-010","dir":"Changelog","previous_headings":"","what":"Version 0.10","title":"Version 0.10","text":"CRAN release: 2016-10-11 Added option evaluate function include timing information ran commands. information subsequently rendered replay. Example usage: evaluate::replay(evaluate::evaluate(‘Sys.sleep(1)’, include_timing = TRUE)) Added new function flush_console() emulate flush.console() evaluate() (#61). Added inject_funs() function create functions environment passed envir argument evaluate().","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-09","dir":"Changelog","previous_headings":"","what":"Version 0.9","title":"Version 0.9","text":"CRAN release: 2016-04-29 Added argument allow_error parse_all() allow syntactical errors R source code allow_error = TRUE; means evaluate(stop_on_error = 0 1) longer stop syntactical errors returns list source code error object instead. can useful show syntactical errors pedagogical purposes.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-083","dir":"Changelog","previous_headings":"","what":"Version 0.8.3","title":"Version 0.8.3","text":"CRAN release: 2016-03-05 Added argument filename evaluate() parse_all() (thanks, @flying-sheep, #58).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-08","dir":"Changelog","previous_headings":"","what":"Version 0.8","title":"Version 0.8","text":"CRAN release: 2015-09-18 Changed package license MIT.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-072","dir":"Changelog","previous_headings":"","what":"Version 0.7.2","title":"Version 0.7.2","text":"CRAN release: 2015-08-13 replay() fails replay certain objects NULL (#53).","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-07","dir":"Changelog","previous_headings":"","what":"Version 0.7","title":"Version 0.7","text":"CRAN release: 2015-04-21 R 3.0.2 minimal required version package now.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-06","dir":"Changelog","previous_headings":"","what":"Version 0.6","title":"Version 0.6","text":"CRAN release: 2015-04-13 Plots longer recorded current graphical device changed, may introduce issues like yihui/knitr#824. parse_all() can parse R code contains multibyte characters correctly now (#49, yihui/knitr#988)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-055","dir":"Changelog","previous_headings":"","what":"Version 0.5.5","title":"Version 0.5.5","text":"CRAN release: 2014-04-29 Actually use text graphics new_output_handler Multiple expressions separated ; line can printed expected result returned visible, e.g. x y printed source code x; y. previous versions, y printed. (thanks, Bill Venables)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-053","dir":"Changelog","previous_headings":"","what":"Version 0.5.3","title":"Version 0.5.3","text":"CRAN release: 2014-03-29","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"bug-fixes-0-5-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Version 0.5.3","text":"fixed bug reported https://github.com/yihui/knitr/issues/722 (repeatedly knitting code results plots omitted randomly) (thanks, Simon Urbanek)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-051","dir":"Changelog","previous_headings":"","what":"Version 0.5.1","title":"Version 0.5.1","text":"CRAN release: 2013-09-30","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Version 0.5.1","text":"R 2.15.x, evaluate() unable filter plots triggered clip() (thanks, Uwe Ligges)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-05","dir":"Changelog","previous_headings":"","what":"Version 0.5","title":"Version 0.5","text":"CRAN release: 2013-09-28","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"new-features-0-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Version 0.5","text":"evaluate() better telling new plot render new page due new par(‘page’) R 3.0.2","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"bug-fixes-0-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Version 0.5","text":"fixed yihui/knitr#600: last expression code comment, previous incomplete plot captured empty plots produced strwidth(), strheight(), clip() longer recorded","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"major-changes-0-5","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"Version 0.5","text":"evaluate() longer records warnings case options(warn = -1); see yihui/knitr#610 ‘output_handler’ evaluate(), visible values ‘value’ handler saved output list; makes possible users save original values instead printed side effects; change affect use default output handlers (#40, thanks, Gabriel Becker) ‘value’ handler new_output_handler() may take additional argument means value visible ; makes possible save invisible values well (#41, thanks, Joroen Ooms)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-047","dir":"Changelog","previous_headings":"","what":"Version 0.4.7","title":"Version 0.4.7","text":"CRAN release: 2013-08-10","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"new-features-0-4-7","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Version 0.4.7","text":"added two arguments keep_warning keep_message evaluate() possible capture warnings messages now","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"bug-fixes-0-4-7","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Version 0.4.7","text":"fixed #25: plots can correctly recorded complex layout now (#25, thanks, Jack Tanner Andy Barbour) fixed yihui/knitr#582: evaluate() misclassified plot changes “par changes” removed plots ; now better identifying plot changes dur par() (thanks, Keith Twombley)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-044","dir":"Changelog","previous_headings":"","what":"Version 0.4.4","title":"Version 0.4.4","text":"CRAN release: 2013-07-02","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"bug-fixes-0-4-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Version 0.4.4","text":"Perspective plots persp() captured now (thanks Harvey Lime Yihui Xie) error occurs printing visible value, evaluate halt cryptic error “operator invalid atomic vectors” (#26, fixed Yihui Xie) internal connection accidentally closed user, informative message show (#23) Now graphical device always try record graphics default (new_device = TRUE) (#34) empty incomplete plots caused par() layout() filtered correctly R 3.0 (#35)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"maintainence-0-4-4","dir":"Changelog","previous_headings":"","what":"MAINTAINENCE","title":"Version 0.4.4","text":"Yihui Xie new maintainer package now","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-043","dir":"Changelog","previous_headings":"","what":"Version 0.4.3","title":"Version 0.4.3","text":"CRAN release: 2012-12-04","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"new-features-0-4-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"Version 0.4.3","text":"Added output_handler argument evaluate. output_handler object, list functions handling type result, prior printing visible return values. allows clients override console-like printing values, still processing correct temporal context. handlers necessary convey correct ordering output. essentially provides stream-based processing, alternative existing deferred processing. New option, stop_on_error controls behaviour errors occur. default value, 0, acts like ’ve copied pasted code console, continues execute code. 1 stop code execution return results evaluation point, 2 raise error.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"bug-fixes-0-4-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"Version 0.4.3","text":"Compound expressions like x <- 10; x now evaluated completely. Chinese characters windows now work correctly (thanks Yihui Xie) Graphics output interleaved correctly generated loop compound statements default, evaluate now open new graphics device clean afterwards. suppress behaviour use new_device = FALSE use show display S4 objects.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-042","dir":"Changelog","previous_headings":"","what":"Version 0.4.2","title":"Version 0.4.2","text":"CRAN release: 2012-04-03 replace deprecated .Internal(eval..vis) correct withVisible evaluate gains debug argument","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-041","dir":"Changelog","previous_headings":"","what":"Version 0.4.1","title":"Version 0.4.1","text":"CRAN release: 2012-01-03 use test_package avoid problems latest version testthat","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-04","dir":"Changelog","previous_headings":"","what":"Version 0.4","title":"Version 0.4","text":"CRAN release: 2011-11-03 Use plot hooks capture multiple plots created loop within function. (Contributed Yihui Xie)","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-03","dir":"Changelog","previous_headings":"","what":"Version 0.3","title":"Version 0.3","text":"CRAN release: 2010-08-31 Import stringr instead depending . Test plot recording presence interactive devices.","code":""},{"path":"evaluate.r-lib.org/dev/news/index.html","id":"version-02","dir":"Changelog","previous_headings":"","what":"Version 0.2","title":"Version 0.2","text":"try_capture_stack create_traceback much better job removing infrastructure calls captured traceback visible results automatically evaluated outputs captured. particularly important lattice ggplot graphics, otherwise require special handling. also correctly captures warnings, errors messages raised print method.","code":""}]
